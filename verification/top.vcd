$version Generated by VerilatedVcd $end
$date Sun Mar 10 23:05:55 2024 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 ) clk $end
  $var wire 32 . fp_out [31:0] $end
  $var wire 19 - frac_out [18:0] $end
  $var wire 32 * in [31:0] $end
  $var wire  1 , int_out $end
  $var wire  1 + sign_out $end
  $scope module top $end
   $var wire  1 ) clk $end
   $var wire 32 . fp_out [31:0] $end
   $var wire 19 - frac_out [18:0] $end
   $var wire 32 * in [31:0] $end
   $var wire  1 , int_out $end
   $var wire  1 + sign_out $end
   $scope module fixed_converter $end
    $var wire  1 ) clk $end
    $var wire  1 # cursor $end
    $var wire 19 $ cursor_array [18:0] $end
    $var wire  8 % exponent [7:0] $end
    $var wire 32 . fp_o [31:0] $end
    $var wire 32 & fp_reg [31:0] $end
    $var wire 19 - fractional_i [18:0] $end
    $var wire  1 , integer_i $end
    $var wire  1 + sign_i $end
   $upscope $end
   $scope module fp_converter $end
    $var wire  1 ) clk $end
    $var wire  8 / exponent [7:0] $end
    $var wire 32 * fp_i [31:0] $end
    $var wire 19 - fractional_o [18:0] $end
    $var wire  1 , integer_o $end
    $var wire  1 + sign_o $end
    $var wire 23 1 significand [22:0] $end
    $var wire  8 0 unbiased_exponent [7:0] $end
    $scope module unnamedblk1 $end
     $var wire 23 ( fractional_part [22:0] $end
     $var wire  1 ' integer_part $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
b0000000000000000000 $
b00000000 %
b00000000000000000000000000000000 &
0'
b00000000000000000000000 (
0)
b00111110000000000000000000000000 *
0+
0,
b0000000000000000000 -
b00000000000000000000000000000000 .
b01111100 /
b00000011 0
b00000000000000000000000 1
#1
1)
#2
0)
b00111101100000000000000000000000 *
b01111011 /
b00000100 0
#3
b00010000000000000000000 (
1)
b0001000000000000000 -
#4
0)
b10111101100000000000000000000000 *
#5
b0001000000000000000 $
b01111011 %
b00111101100000000000000000000000 &
1)
1+
b00111101100000000000000000000000 .
#6
0)
b00000000000000000000000000000000 *
b00000000 /
b01111111 0
#7
b10111101100000000000000000000000 &
b00000000000000000000000 (
1)
0+
b0000000000000000000 -
b10111101100000000000000000000000 .
#8
0)
b00111111100000000000000000000000 *
b01111111 /
b00000000 0
#9
b0000000000000000000 $
b00000000 %
b00000000000000000000000000000000 &
1'
1)
1,
b00000000000000000000000000000000 .
#10
0)
b10111111100000000000000000000000 *
#11
1)
1+
