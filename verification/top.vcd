$version Generated by VerilatedVcd $end
$date Mon Mar 11 15:32:00 2024 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 ( clk $end
  $var wire 32 - fp_out [31:0] $end
  $var wire 19 , frac_out [18:0] $end
  $var wire 32 ) in [31:0] $end
  $var wire  1 + int_out $end
  $var wire  1 * sign_out $end
  $scope module top $end
   $var wire  1 ( clk $end
   $var wire 32 - fp_out [31:0] $end
   $var wire 19 , frac_out [18:0] $end
   $var wire 32 ) in [31:0] $end
   $var wire  1 + int_out $end
   $var wire  1 * sign_out $end
   $scope module fixed_converter $end
    $var wire 32 - fp_o [31:0] $end
    $var wire 32 # fp_reg [31:0] $end
    $var wire 19 , fractional_i [18:0] $end
    $var wire  1 + integer_i $end
    $var wire  1 * sign_i $end
    $scope module unnamedblk1 $end
     $var wire 19 % bitwise_or_array [18:0] $end
     $var wire  8 $ exponent [7:0] $end
    $upscope $end
   $upscope $end
   $scope module fp_converter $end
    $var wire  8 . exponent [7:0] $end
    $var wire 32 ) fp_i [31:0] $end
    $var wire 19 , fractional_o [18:0] $end
    $var wire  1 + integer_o $end
    $var wire  1 * sign_o $end
    $var wire 23 0 significand [22:0] $end
    $var wire  8 / unbiased_exponent [7:0] $end
    $scope module unnamedblk1 $end
     $var wire 23 ' fractional_part [22:0] $end
     $var wire  1 & integer_part $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00111110000000000000000000000000 #
b00000011 $
b0011111111111111111 %
0&
b00100000000000000000000 '
0(
b00111110000000000000000000000000 )
0*
0+
b0010000000000000000 ,
b00111110000000000000000000000000 -
b01111100 .
b00000011 /
b00000000000000000000000 0
#1
b00111101100000000000000000000000 #
b00000100 $
b0001111111111111111 %
b00010000000000000000000 '
b00111101100000000000000000000000 )
b0001000000000000000 ,
b00111101100000000000000000000000 -
b01111011 .
b00000100 /
#2
b10111101100000000000000000000000 #
b10111101100000000000000000000000 )
1*
b10111101100000000000000000000000 -
#3
b00111110100101000111101011000000 #
b00000010 $
b0111111111111111111 %
b01001010001111010111000 '
b00111110100101000111101011100001 )
0*
b0100101000111101011 ,
b00111110100101000111101011000000 -
b01111101 .
b00000010 /
b00101000111101011100001 0
#4
#5
#6
