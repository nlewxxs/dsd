task 2

210048 block memory bits used by base code
divided by 8 gives 26256
onchip mem was 20480 so rest of NIOS uses up 5776
for onchip mem 60000 total size was 5792, so moving 39520 bytes added 16 byte overhead. Best i can guess is muxes or smth. 

508160 bytes total, so available for onchip mem should be 502384
tried this but said 4065792 / 4065280 used
guessing some sort of extra overhead for memory accessing, since addresses need to be bigger or smth? more muxes? 
512 bits / 64 btyes over so reasonable hypothesis

remove from onchip ram
didn't help, 100% usage still raises error for some reason. Reduce by another 64 because maybe it needs to fit something else

1GB (2x256Mx16) DDR3 SDRAM on HPS
111/397 total RAM (M10K) blocks used by 100000 bytes of onchip mem used by ram 

strat is to increase size in powers of 2 until number of m10k blocks changes to 2
still 1 @ 2048 bits / 256 bytes
512 bytes / 4096 bits : still 1
1024 bytes / 8192 bits : (expect 1) still 1
16384 is 2
so expect 16384*2 = 4096 bytes to be 4 M10K blocks, confirmed.

totaling up all other elements, gives 13 blocks used by everything except onchip mem 
total 397 exist, gives 384 blocks spare for onchip mem = 393,216 bytes?
correct. 

test data 1 gives 5000b free for stack + heap, 52*4 = 208, subtract from 5000 gives ___ which we take off from 20480
to give 15688.

didn't acc work, partially due to macros I think? shitly defined. Maximum stack size hard to predict. 
16000 onchip mem worked for test1, not for test2 as predicted. 

just do 14k plus required amount, idiot. 

22164 required for test2 in theory, 23k tested - 
not enough. just gonna cap and say 24k. 
